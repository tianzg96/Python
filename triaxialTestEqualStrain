from yade import pack, plot,qt

nRead=readParamsFromTable(
	num_spheres=9000,# number of spheres
	compFricDegree = 15, # contact friction during the confining phase
	key='_triax_base_', # put you simulation's name here
	unknownOk=True
)
from yade.params import table

###############################################################################
num_spheres=table.num_spheres# number of spheres
key=table.key
targetPorosity = 0.43 #the porosity we want for the packing
compFricDegree = table.compFricDegree # initial contact friction during the confining phase (will be decreased during the REFD compaction process)
finalFricDegree = 30 # contact friction during the deviatoric loading
damp=0.8 # damping coefficient
stabilityThreshold=0.001 # we test unbalancedForce against this value in different loops (see below)
young=5e6 # contact stiffness
mn,mx=Vector3(0,0,0),Vector3(1.215,1.215,1.215) # corners of the initial packing

O.materials.append(FrictMat(young=young,poisson=0.5,frictionAngle=radians(compFricDegree),density=2600,label='spheres'))
O.materials.append(FrictMat(young=1000*young,poisson=0.5,frictionAngle=0,density=0,label='walls'))

walls=aabbWalls([mn,mx],thickness=0.05,material='walls')
wallIds=O.bodies.append(walls)

sp=pack.SpherePack()

sp.makeCloud(mn,mx,-1,.3333,num_spheres,False, 0.95,seed=0) #"seed" make the "random" generation always the same
O.bodies.append([sphere(center,rad,material='spheres') for center,rad in sp])
###############################################################################

###############################################################################
triax=TriaxialStressController(
	maxMultiplier=1.+1e4/young, # spheres growing factor (fast growth)
	finalMaxMultiplier=1.+1e3/young, # spheres growing factor (slow growth)
	thickness = 0,
	stressMask = 7,
	internalCompaction=True, # If true the confining pressure is generated by growing particles
)

newton=NewtonIntegrator(damping=damp)

O.engines=[
	ForceResetter(),
	InsertionSortCollider([Bo1_Sphere_Aabb(),Bo1_Box_Aabb()]),
	InteractionLoop(
		[Ig2_Sphere_Sphere_ScGeom(),Ig2_Box_Sphere_ScGeom()],
		[Ip2_FrictMat_FrictMat_FrictPhys()],
		[Law2_ScGeom_FrictPhys_CundallStrack()]
	),

	GlobalStiffnessTimeStepper(active=1,timeStepUpdateInterval=200,timestepSafetyCoefficient=0.5),
	triax,
	TriaxialStateRecorder(iterPeriod=200,file='WallStresses'+table.key+'20'),
	newton,
    #VTKRecorder(fileName='/home/zhiguo/pyFile/test1/vtkFile/3d-vtk-',recorders=['all'],iterPeriod=2000)
]
###############################################################################

###############################################################################
triax.goal1=triax.goal2=triax.goal3=-10000
###############################################################################

###############################################################################
Gl1_Sphere.stripes=0
if nRead==0: qt.Controller(), qt.View()
###############################################################################

###############################################################################
while 1:
    unb=unbalancedForce()
    print 'internalCompaction: unbalanced force:',unb,' mean stress: ',triax.meanStress,'porosity:',triax.porosity
    if unb<stabilityThreshold and abs(-10000-triax.meanStress)/10000<0.01:
        plot.resetData()
        dim=utils.aabbExtrema()
        plot.addData(Ymin=dim[0][1],Ymax=dim[1][1])
        for b in O.bodies:
            if isinstance(b.shape, Sphere):
                plot.addData(
                sphereCenterX = b.state.pos[0],
                sphereCenterY = b.state.pos[1],
                sphereCenterZ = b.state.pos[2],
                sphereRadiusR = b.shape.radius
                )
        plot.saveDataTxt('/home/zhiguo/pyFile/test1/txtFile/internalCompaction.txt',vars=('sphereCenterX','sphereCenterY','sphereCenterZ','sphereRadiusR','Ymin','Ymax'))

        break
    O.run(200, True)
###############################################################################

###############################################################################
'''
# confining porosity
while triax.porosity>targetPorosity:
    compFricDegree = 0.95*compFricDegree
    setContactFriction(radians(compFricDegree))
    print "\r Friction: ",compFricDegree," porosity:",triax.porosity,
    sys.stdout.flush()
    O.run(500,1)
'''
###############################################################################

###############################################################################
###############################################################################
# equal length compaction 1  0.06
while 1:
    unb=unbalancedForce()
    triax.internalCompaction=False
    triax.stressMask = 0
    triax.goal1= 0
    triax.goal2= -0.06
    triax.goal3= 0
    height0=1
    dim=utils.aabbExtrema()
    print 'externalCompaction 1: unbalanced force:',unb,' y strain: ',triax.strain[1],'porosity:',triax.porosity,'Ymin:',dim[0][1],'Ymax:',dim[1][1]
    if abs(triax.strain[1])>abs(triax.goal2):
        plot.resetData()
        plot.addData(Ymin=dim[0][1],Ymax=dim[1][1])
        for b in O.bodies:
            if isinstance(b.shape, Sphere):
                plot.addData(
                sphereCenterX = b.state.pos[0],
                sphereCenterY = b.state.pos[1],
                sphereCenterZ = b.state.pos[2],
                sphereRadiusR = b.shape.radius
                )
        plot.saveDataTxt('/home/zhiguo/pyFile/test1/txtFile/externalCompaction_y_strain_0.06.txt',vars=('sphereCenterX','sphereCenterY','sphereCenterZ','sphereRadiusR','Ymin','Ymax'))
        break
    O.run(200, True)
###############################################################################
###############################################################################

###############################################################################
###############################################################################
# equal length compaction 2  0.12
while 1:
    unb=unbalancedForce()
    triax.internalCompaction=False
    triax.stressMask = 0
    triax.goal1= 0
    triax.goal2= -0.12
    triax.goal3= 0
    height0=1
    dim=utils.aabbExtrema()
    print 'externalCompaction 2: unbalanced force:',unb,' y strain: ',triax.strain[1],'porosity:',triax.porosity,'Ymin:',dim[0][1],'Ymax:',dim[1][1]
    if abs(triax.strain[1])>abs(triax.goal2):
        plot.resetData()
        plot.addData(Ymin=dim[0][1],Ymax=dim[1][1])
        for b in O.bodies:
            if isinstance(b.shape, Sphere):
                plot.addData(
                sphereCenterX = b.state.pos[0],
                sphereCenterY = b.state.pos[1],
                sphereCenterZ = b.state.pos[2],
                sphereRadiusR = b.shape.radius
                )
        plot.saveDataTxt('/home/zhiguo/pyFile/test1/txtFile/externalCompaction_y_strain_0.12.txt',vars=('sphereCenterX','sphereCenterY','sphereCenterZ','sphereRadiusR','Ymin','Ymax'))
        break
    O.run(200, True)
###############################################################################
###############################################################################

###############################################################################
###############################################################################
# equal length compaction 3  0.18
while 1:
    unb=unbalancedForce()
    triax.internalCompaction=False
    triax.stressMask = 0
    triax.goal1= 0
    triax.goal2= -0.18
    triax.goal3= 0
    height0=1
    dim=utils.aabbExtrema()
    print 'externalCompaction 3: unbalanced force:',unb,' y strain: ',triax.strain[1],'porosity:',triax.porosity,'Ymin:',dim[0][1],'Ymax:',dim[1][1]
    if abs(triax.strain[1])>abs(triax.goal2):
        plot.resetData()
        plot.addData(Ymin=dim[0][1],Ymax=dim[1][1])
        for b in O.bodies:
            if isinstance(b.shape, Sphere):
                plot.addData(
                sphereCenterX = b.state.pos[0],
                sphereCenterY = b.state.pos[1],
                sphereCenterZ = b.state.pos[2],
                sphereRadiusR = b.shape.radius
                )
        plot.saveDataTxt('/home/zhiguo/pyFile/test1/txtFile/externalCompaction_y_strain_0.18.txt',vars=('sphereCenterX','sphereCenterY','sphereCenterZ','sphereRadiusR','Ymin','Ymax'))
        break
    O.run(200, True)
###############################################################################
###############################################################################

###############################################################################
###############################################################################
# equal length compaction 4  0.24
while 1:
    unb=unbalancedForce()
    triax.internalCompaction=False
    triax.stressMask = 0
    triax.goal1= 0
    triax.goal2= -0.24
    triax.goal3= 0
    height0=1
    dim=utils.aabbExtrema()
    print 'externalCompaction 4: unbalanced force:',unb,' y strain: ',triax.strain[1],'porosity:',triax.porosity,'Ymin:',dim[0][1],'Ymax:',dim[1][1]
    if abs(triax.strain[1])>abs(triax.goal2):
        plot.resetData()
        plot.addData(Ymin=dim[0][1],Ymax=dim[1][1])
        for b in O.bodies:
            if isinstance(b.shape, Sphere):
                plot.addData(
                sphereCenterX = b.state.pos[0],
                sphereCenterY = b.state.pos[1],
                sphereCenterZ = b.state.pos[2],
                sphereRadiusR = b.shape.radius
                )
        plot.saveDataTxt('/home/zhiguo/pyFile/test1/txtFile/externalCompaction_y_strain_0.24.txt',vars=('sphereCenterX','sphereCenterY','sphereCenterZ','sphereRadiusR','Ymin','Ymax'))
        break
    O.run(200, True)
###############################################################################
###############################################################################

###############################################################################
###############################################################################
# equal length compaction 5  0.30
while 1:
    unb=unbalancedForce()
    triax.internalCompaction=False
    triax.stressMask = 0
    triax.goal1= 0
    triax.goal2= -0.30
    triax.goal3= 0
    height0=1
    dim=utils.aabbExtrema()
    print 'externalCompaction 5: unbalanced force:',unb,' y strain: ',triax.strain[1],'porosity:',triax.porosity,'Ymin:',dim[0][1],'Ymax:',dim[1][1]
    if abs(triax.strain[1])>abs(triax.goal2):
        plot.resetData()
        plot.addData(Ymin=dim[0][1],Ymax=dim[1][1])
        for b in O.bodies:
            if isinstance(b.shape, Sphere):
                plot.addData(
                sphereCenterX = b.state.pos[0],
                sphereCenterY = b.state.pos[1],
                sphereCenterZ = b.state.pos[2],
                sphereRadiusR = b.shape.radius
                )
        plot.saveDataTxt('/home/zhiguo/pyFile/test1/txtFile/externalCompaction_y_strain_0.30.txt',vars=('sphereCenterX','sphereCenterY','sphereCenterZ','sphereRadiusR','Ymin','Ymax'))
        break
    O.run(200, True)
###############################################################################
###############################################################################

###############################################################################
###############################################################################
# equal length compaction 6  0.36
while 1:
    unb=unbalancedForce()
    triax.internalCompaction=False
    triax.stressMask = 0
    triax.goal1= 0
    triax.goal2= -0.36
    triax.goal3= 0
    height0=1
    dim=utils.aabbExtrema()
    print 'externalCompaction 6: unbalanced force:',unb,' y strain: ',triax.strain[1],'porosity:',triax.porosity,'Ymin:',dim[0][1],'Ymax:',dim[1][1]
    if abs(triax.strain[1])>abs(triax.goal2):
        plot.resetData()
        plot.addData(Ymin=dim[0][1],Ymax=dim[1][1])
        for b in O.bodies:
            if isinstance(b.shape, Sphere):
                plot.addData(
                sphereCenterX = b.state.pos[0],
                sphereCenterY = b.state.pos[1],
                sphereCenterZ = b.state.pos[2],
                sphereRadiusR = b.shape.radius
                )
        plot.saveDataTxt('/home/zhiguo/pyFile/test1/txtFile/externalCompaction_y_strain_0.36.txt',vars=('sphereCenterX','sphereCenterY','sphereCenterZ','sphereRadiusR','Ymin','Ymax'))
        break
    O.run(200, True)
###############################################################################
###############################################################################

###############################################################################
###############################################################################
# equal length compaction 7  0.42
while 1:
    unb=unbalancedForce()
    triax.internalCompaction=False
    triax.stressMask = 0
    triax.goal1= 0
    triax.goal2= -0.42
    triax.goal3= 0
    height0=1
    dim=utils.aabbExtrema()
    print 'externalCompaction 7: unbalanced force:',unb,' y strain: ',triax.strain[1],'porosity:',triax.porosity,'Ymin:',dim[0][1],'Ymax:',dim[1][1]
    if abs(triax.strain[1])>abs(triax.goal2):
        plot.resetData()
        plot.addData(Ymin=dim[0][1],Ymax=dim[1][1])
        for b in O.bodies:
            if isinstance(b.shape, Sphere):
                plot.addData(
                sphereCenterX = b.state.pos[0],
                sphereCenterY = b.state.pos[1],
                sphereCenterZ = b.state.pos[2],
                sphereRadiusR = b.shape.radius
                )
        plot.saveDataTxt('/home/zhiguo/pyFile/test1/txtFile/externalCompaction_y_strain_0.42.txt',vars=('sphereCenterX','sphereCenterY','sphereCenterZ','sphereRadiusR','Ymin','Ymax'))
        break
    O.run(200, True)
###############################################################################
###############################################################################

###############################################################################
###############################################################################
# equal length compaction 8  0.48
while 1:
    unb=unbalancedForce()
    triax.internalCompaction=False
    triax.stressMask = 0
    triax.goal1= 0
    triax.goal2= -0.48
    triax.goal3= 0
    height0=1
    dim=utils.aabbExtrema()
    print 'externalCompaction 8: unbalanced force:',unb,' y strain: ',triax.strain[1],'porosity:',triax.porosity,'Ymin:',dim[0][1],'Ymax:',dim[1][1]
    if abs(triax.strain[1])>abs(triax.goal2):
        plot.resetData()
        plot.addData(Ymin=dim[0][1],Ymax=dim[1][1])
        for b in O.bodies:
            if isinstance(b.shape, Sphere):
                plot.addData(
                sphereCenterX = b.state.pos[0],
                sphereCenterY = b.state.pos[1],
                sphereCenterZ = b.state.pos[2],
                sphereRadiusR = b.shape.radius
                )
        plot.saveDataTxt('/home/zhiguo/pyFile/test1/txtFile/externalCompaction_y_strain_0.48.txt',vars=('sphereCenterX','sphereCenterY','sphereCenterZ','sphereRadiusR','Ymin','Ymax'))
        break
    O.run(200, True)
###############################################################################
###############################################################################

###############################################################################
###############################################################################
# equal length compaction 9  0.54
while 1:
    unb=unbalancedForce()
    triax.internalCompaction=False
    triax.stressMask = 0
    triax.goal1= 0
    triax.goal2= -0.54
    triax.goal3= 0
    height0=1
    dim=utils.aabbExtrema()
    print 'externalCompaction 9: unbalanced force:',unb,' y strain: ',triax.strain[1],'porosity:',triax.porosity,'Ymin:',dim[0][1],'Ymax:',dim[1][1]
    if abs(triax.strain[1])>abs(triax.goal2):
        plot.resetData()
        plot.addData(Ymin=dim[0][1],Ymax=dim[1][1])
        for b in O.bodies:
            if isinstance(b.shape, Sphere):
                plot.addData(
                sphereCenterX = b.state.pos[0],
                sphereCenterY = b.state.pos[1],
                sphereCenterZ = b.state.pos[2],
                sphereRadiusR = b.shape.radius
                )
        plot.saveDataTxt('/home/zhiguo/pyFile/test1/txtFile/externalCompaction_y_strain_0.54.txt',vars=('sphereCenterX','sphereCenterY','sphereCenterZ','sphereRadiusR','Ymin','Ymax'))
        break
    O.run(200, True)
###############################################################################
###############################################################################

###############################################################################
###############################################################################
# equal length compaction 10  0.60
while 1:
    unb=unbalancedForce()
    triax.internalCompaction=False
    triax.stressMask = 0
    triax.goal1= 0
    triax.goal2= -0.60
    triax.goal3= 0
    height0=1
    dim=utils.aabbExtrema()
    print 'externalCompaction 10: unbalanced force:',unb,' y strain: ',triax.strain[1],'porosity:',triax.porosity,'Ymin:',dim[0][1],'Ymax:',dim[1][1]
    if abs(triax.strain[1])>abs(triax.goal2):
        plot.resetData()
        plot.addData(Ymin=dim[0][1],Ymax=dim[1][1])
        for b in O.bodies:
            if isinstance(b.shape, Sphere):
                plot.addData(
                sphereCenterX = b.state.pos[0],
                sphereCenterY = b.state.pos[1],
                sphereCenterZ = b.state.pos[2],
                sphereRadiusR = b.shape.radius
                )
        plot.saveDataTxt('/home/zhiguo/pyFile/test1/txtFile/externalCompaction_y_strain_0.60.txt',vars=('sphereCenterX','sphereCenterY','sphereCenterZ','sphereRadiusR','Ymin','Ymax'))
        break
    O.run(200, True)
###############################################################################
###############################################################################

###############################################################################
###############################################################################
# equal length compaction 11  0.66
while 1:
    unb=unbalancedForce()
    triax.internalCompaction=False
    triax.stressMask = 0
    triax.goal1= 0
    triax.goal2= -0.66
    triax.goal3= 0
    height0=1
    dim=utils.aabbExtrema()
    print 'externalCompaction 11: unbalanced force:',unb,' y strain: ',triax.strain[1],'porosity:',triax.porosity,'Ymin:',dim[0][1],'Ymax:',dim[1][1]
    if abs(triax.strain[1])>abs(triax.goal2):
        plot.resetData()
        plot.addData(Ymin=dim[0][1],Ymax=dim[1][1])
        for b in O.bodies:
            if isinstance(b.shape, Sphere):
                plot.addData(
                sphereCenterX = b.state.pos[0],
                sphereCenterY = b.state.pos[1],
                sphereCenterZ = b.state.pos[2],
                sphereRadiusR = b.shape.radius
                )
        plot.saveDataTxt('/home/zhiguo/pyFile/test1/txtFile/externalCompaction_y_strain_0.66.txt',vars=('sphereCenterX','sphereCenterY','sphereCenterZ','sphereRadiusR','Ymin','Ymax'))
        break
    O.run(200, True)
###############################################################################
###############################################################################

###############################################################################
###############################################################################
# equal length compaction 12  0.72
while 1:
    unb=unbalancedForce()
    triax.internalCompaction=False
    triax.stressMask = 0
    triax.goal1= 0
    triax.goal2= -0.72
    triax.goal3= 0
    height0=1
    dim=utils.aabbExtrema()
    print 'externalCompaction 12: unbalanced force:',unb,' y strain: ',triax.strain[1],'porosity:',triax.porosity,'Ymin:',dim[0][1],'Ymax:',dim[1][1]
    if abs(triax.strain[1])>abs(triax.goal2):
        plot.resetData()
        plot.addData(Ymin=dim[0][1],Ymax=dim[1][1])
        for b in O.bodies:
            if isinstance(b.shape, Sphere):
                plot.addData(
                sphereCenterX = b.state.pos[0],
                sphereCenterY = b.state.pos[1],
                sphereCenterZ = b.state.pos[2],
                sphereRadiusR = b.shape.radius
                )
        plot.saveDataTxt('/home/zhiguo/pyFile/test1/txtFile/externalCompaction_y_strain_0.72.txt',vars=('sphereCenterX','sphereCenterY','sphereCenterZ','sphereRadiusR','Ymin','Ymax'))
        break
    O.run(200, True)
###############################################################################
###############################################################################

###############################################################################
###############################################################################
# equal length compaction 13  0.78
while 1:
    unb=unbalancedForce()
    triax.internalCompaction=False
    triax.stressMask = 0
    triax.goal1= 0
    triax.goal2= -0.78
    triax.goal3= 0
    height0=1
    dim=utils.aabbExtrema()
    print 'externalCompaction 13: unbalanced force:',unb,' y strain: ',triax.strain[1],'porosity:',triax.porosity,'Ymin:',dim[0][1],'Ymax:',dim[1][1]
    if abs(triax.strain[1])>abs(triax.goal2):
        plot.resetData()
        plot.addData(Ymin=dim[0][1],Ymax=dim[1][1])
        for b in O.bodies:
            if isinstance(b.shape, Sphere):
                plot.addData(
                sphereCenterX = b.state.pos[0],
                sphereCenterY = b.state.pos[1],
                sphereCenterZ = b.state.pos[2],
                sphereRadiusR = b.shape.radius
                )
        plot.saveDataTxt('/home/zhiguo/pyFile/test1/txtFile/externalCompaction_y_strain_0.78.txt',vars=('sphereCenterX','sphereCenterY','sphereCenterZ','sphereRadiusR','Ymin','Ymax'))
        break
    O.run(200, True)
###############################################################################
###############################################################################

###############################################################################
'''
# equal force compaction
while 1:
    O.run(1000, True)
    unb=unbalancedForce()
    triax.internalCompaction=False
    triax.stressMask = 4
    triax.goal1= 0
    triax.goal2= 0
    triax.goal3= -10000-2000
    if unb<stabilityThreshold*0.1:
        break
'''
###############################################################################

###############################################################################
'''
else:
    O.engines[4]=PyRunner(iterPeriod=20,command='history()',label='recorder')
    fxmin=utils.sumForces([0],(1,0,0))
    fxmax=utils.sumForces([1],(1,0,0))
    fymin=utils.sumForces([2],(0,1,0))
    fymax=utils.sumForces([3],(0,1,0))
    fzmin=utils.sumForces([4],(0,0,1))
    fzmax=utils.sumForces([5],(0,0,1))
    print fxmin,fxmax,fymin,fymax,fzmin,fzmax
    dim=utils.aabbExtrema()
    print dim
'''

